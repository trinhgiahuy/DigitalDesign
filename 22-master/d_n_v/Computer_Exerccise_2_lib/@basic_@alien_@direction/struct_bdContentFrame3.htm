<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 12:50:11 on 22.11.2019 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<A NAME="entity" HREF="#architecture">Go to Architecture</A><pre>
<span class=C>--</span>
<span class=C>-- VHDL Entity Computer_Exerccise_2_lib.Basic_Alien_Direction.arch_name</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:48:55 11.10.2019</span>
<span class=C>--</span>
<span class=C>-- using Mentor Graphics HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> Basic_Alien_Direction <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_0       : <span class=A>IN</span>     <span class=T>std_logic</span>;                      <span class=C>-- Condition to switch direction</span>
      x_7       : <span class=A>IN</span>     <span class=T>std_logic</span>;                      <span class=C>-- Condition to switch direction</span>
      direction : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0)   <span class=C>-- 2 MSB allow to shift - 2 LSB decide direction</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> Basic_Alien_Direction ;
</pre>
<A NAME="architecture" HREF="#entity">Go to Entity</A><pre>
<span class=C>--</span>
<span class=C>-- VHDL Entity Computer_Exerccise_2_lib.Basic_Alien_Direction.arch_name</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-711-SPC)</span>
<span class=C>--          at - 14:48:55 11.10.2019</span>
<span class=C>--</span>
<span class=C>-- using Mentor Graphics HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> Basic_Alien_Direction <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable    : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_0       : <span class=A>IN</span>     <span class=T>std_logic</span>;                      <span class=C>-- Condition to switch direction</span>
      x_7       : <span class=A>IN</span>     <span class=T>std_logic</span>;                      <span class=C>-- Condition to switch direction</span>
      direction : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (1 <span class=K>DOWNTO</span> 0)   <span class=C>-- 2 MSB allow to shift - 2 LSB decide direction</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> Basic_Alien_Direction ;


<span class=C>--</span>
<span class=C>-- VHDL Architecture Computer_Exerccise_2_lib.Basic_Alien_Direction.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-707-SPC)</span>
<span class=C>--          at - 09:35:24 24.10.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> Basic_Alien_Direction <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> din0  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din1  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> din2  : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);    <span class=C>-- 2 MSB allow to shift - 2 LSB decide direction</span>
   <span class=K>SIGNAL</span> din3  : <span class=T>std_logic_vector</span>(1 <span class=K>DOWNTO</span> 0);    <span class=C>-- 2 MSB allow to shift - 2 LSB decide direction</span>
   <span class=K>SIGNAL</span> din4  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;                       <span class=C>-- Condition to switch direction</span>
   <span class=K>SIGNAL</span> dout4 : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> qb    : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_7' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_7reg_cval : <span class=T>std_logic</span>;


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'adff'</span>
   din0 <= mw_U_7reg_cval;
   qb <= <span class=K>NOT</span>(mw_U_7reg_cval);
   u_7seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_7reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_7reg_cval <= dout4;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_7seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'and'</span>
   dout <= din0 <span class=K>AND</span> x_7;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'and'</span>
   din4 <= x_0 <span class=K>AND</span> qb;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'constval'</span>
   din3 <= <span class=S>"00"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'merge'</span>
   din2 <= qb & din0;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(din0, qb, din1)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> din1 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout4 <= din0;
      <span class=K>WHEN</span> '1' => dout4 <= qb;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout4 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_3' of 'mux'</span>
   u_3combo_proc: <span class=K>PROCESS</span>(din3, din2, enable)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> enable <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => direction <= din3;
      <span class=K>WHEN</span> '1' => direction <= din2;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => direction <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_3combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'or'</span>
   din1 <= dout <span class=K>OR</span> din4;

   <span class=C>-- Instance port mappings.</span>

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
