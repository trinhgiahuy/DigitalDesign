<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 12:48:57 on 22.11.2019 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity Computer_Exercise_3_lib.C3_T4_Bullet.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-718-SPC)</span>
<span class=C>--          at - 17:06:30 21.11.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> C3_T4_Bullet <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn            : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      clk            : <span class=A>IN</span>     <span class=T>std_logic</span>;
      enable         : <span class=A>IN</span>     <span class=T>std_logic</span>;
      gun_x_coord    : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      rst_n          : <span class=A>IN</span>     <span class=T>std_logic</span>;
      bullet_color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      bullet_x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      bullet_y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> C3_T4_Bullet ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture Computer_Exercise_3_lib.C3_T4_Bullet.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-718-SPC)</span>
<span class=C>--          at - 17:06:30 21.11.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> Computer_Exerccise_2_lib;
<span class=K>LIBRARY</span> Computer_Exercise_4_hdl_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> C3_T4_Bullet <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> coord_2 : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> d       : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout    : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout1   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout3   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout4   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> dout5   : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> equal   : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> y       : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> bullet_x_coord_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> bullet_y_coord_internal : <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_0' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_0reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_5' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_5reg_cval : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);

   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_11' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_11reg_cval : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);

   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> C2_T4_Rightshifter
   <span class=K>PORT</span> (
      x : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> Coordinate_Compare
   <span class=K>PORT</span> (
      coord_1 : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      coord_2 : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      equal   : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : C2_T4_Rightshifter <span class=K>USE</span> <span class=K>ENTITY</span> Computer_Exerccise_2_lib.C2_T4_Rightshifter;
   <span class=K>FOR</span> <span class=K>ALL</span> : Coordinate_Compare <span class=K>USE</span> <span class=K>ENTITY</span> Computer_Exercise_4_hdl_lib.Coordinate_Compare;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'adff'</span>
   bullet_x_coord_internal <= mw_U_0reg_cval;
   u_0seq_proc: <span class=K>PROCESS</span> (clk)<span class=K>BEGIN</span>
      <span class=K>IF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
            mw_U_0reg_cval <= <span class=S>"00000000"</span>;
         <span class=K>ELSE</span>
            mw_U_0reg_cval <= dout;
         <span class=K>END</span> <span class=K>IF</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_5' of 'adff'</span>
   bullet_y_coord_internal <= mw_U_5reg_cval;
   u_5seq_proc: <span class=K>PROCESS</span> (clk)<span class=K>BEGIN</span>
      <span class=K>IF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
            mw_U_5reg_cval <= <span class=S>"00000000"</span>;
         <span class=K>ELSE</span>
            mw_U_5reg_cval <= dout3;
         <span class=K>END</span> <span class=K>IF</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_5seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_11' of 'adff'</span>
   bullet_color <= mw_U_11reg_cval;
   u_11seq_proc: <span class=K>PROCESS</span> (clk)<span class=K>BEGIN</span>
      <span class=K>IF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
            mw_U_11reg_cval <= <span class=S>"000000000000000000010001"</span>;
         <span class=K>ELSE</span>
            mw_U_11reg_cval <= d;
         <span class=K>END</span> <span class=K>IF</span>;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_11seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_7' of 'and'</span>
   dout1 <= equal <span class=K>AND</span> btn(0);

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_10' of 'constval'</span>
   dout5 <= <span class=S>"01000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_12' of 'constval'</span>
   d <= <span class=S>"111111111000000010000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_13' of 'constval'</span>
   coord_2 <= <span class=S>"00000000"</span>;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(bullet_x_coord_internal, gun_x_coord, btn)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> btn(0) <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout <= bullet_x_coord_internal;
      <span class=K>WHEN</span> '1' => dout <= gun_x_coord;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_4' of 'mux'</span>
   u_4combo_proc: <span class=K>PROCESS</span>(bullet_y_coord_internal, y, enable)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> enable <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout4 <= bullet_y_coord_internal;
      <span class=K>WHEN</span> '1' => dout4 <= y;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout4 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_4combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_6' of 'mux'</span>
   u_6combo_proc: <span class=K>PROCESS</span>(dout4, dout5, dout1)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout1 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout3 <= dout4;
      <span class=K>WHEN</span> '1' => dout3 <= dout5;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout3 <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_6combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_3 : C2_T4_Rightshifter
      <span class=K>PORT</span> <span class=K>MAP</span> (
         x => bullet_y_coord_internal,
         y => y
      );
   U_2 : Coordinate_Compare
      <span class=K>PORT</span> <span class=K>MAP</span> (
         coord_1 => bullet_y_coord_internal,
         coord_2 => coord_2,
         equal   => equal
      );

   <span class=C>-- Implicit buffered output assignments</span>
   bullet_x_coord <= bullet_x_coord_internal;
   bullet_y_coord <= bullet_y_coord_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
