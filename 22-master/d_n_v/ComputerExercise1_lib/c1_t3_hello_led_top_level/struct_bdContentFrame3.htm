<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 11:30:01 on 11.10.2019 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>--</span>
<span class=C>-- VHDL Entity ComputerExercise1_lib.entity_name.arch_name</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-709-SPC)</span>
<span class=C>--          at - 15:25:41  4.10.2019</span>
<span class=C>--</span>
<span class=C>-- using Mentor Graphics HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c1_t3_hello_led_top_level <span class=K>IS</span>
   <span class=K>PORT</span>(
      btn     : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      sw0     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c1_t3_hello_led_top_level ;


<span class=C>--</span>
<span class=C>-- VHDL Architecture ComputerExercise1_lib.c1_t3_hello_led_top_level.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - mfhubu.UNKNOWN (HTC219-709-SPC)</span>
<span class=C>--          at - 15:54:08  4.10.2019</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>LIBRARY</span> ComputerExercise1_lib;

<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c1_t3_hello_led_top_level <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> color1    : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> color_BGR : <span class=T>std_logic_vector</span>(23 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> din1      : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_coord1  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> x_coord2  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);
   <span class=K>SIGNAL</span> y_coord1  : <span class=T>std_logic_vector</span>(7 <span class=K>DOWNTO</span> 0);


   <span class=C>-- Component Declarations</span>
   <span class=K>COMPONENT</span> c1_t3_hello_led
   <span class=K>PORT</span> (
      btn       : <span class=A>IN</span>     <span class=T>std_logic_vector</span> (3 <span class=K>DOWNTO</span> 0);
      sw0       : <span class=A>IN</span>     <span class=T>std_logic</span> ;
      color_BGR : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;
   <span class=K>COMPONENT</span> c1_t3_static_hello_led
   <span class=K>PORT</span> (
      color   : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (23 <span class=K>DOWNTO</span> 0);
      x_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0);
      y_coord : <span class=A>OUT</span>    <span class=T>std_logic_vector</span> (7 <span class=K>DOWNTO</span> 0)
   );
   <span class=K>END</span> <span class=K>COMPONENT</span>;

   <span class=C>-- Optional embedded configurations</span>
   <span class=C>-- pragma synthesis_off</span>
   <span class=K>FOR</span> <span class=K>ALL</span> : c1_t3_hello_led <span class=K>USE</span> <span class=K>ENTITY</span> ComputerExercise1_lib.c1_t3_hello_led;
   <span class=K>FOR</span> <span class=K>ALL</span> : c1_t3_static_hello_led <span class=K>USE</span> <span class=K>ENTITY</span> ComputerExercise1_lib.c1_t3_static_hello_led;
   <span class=C>-- pragma synthesis_on</span>


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'mux'</span>
   u_0combo_proc: <span class=K>PROCESS</span>(x_coord1, x_coord2, sw0)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> sw0 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => x_coord <= x_coord1;
      <span class=K>WHEN</span> '1' => x_coord <= x_coord2;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => x_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_0combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'mux'</span>
   u_1combo_proc: <span class=K>PROCESS</span>(y_coord1, din1, sw0)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> sw0 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => y_coord <= y_coord1;
      <span class=K>WHEN</span> '1' => y_coord <= din1;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => y_coord <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(color1, color_BGR, sw0)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> sw0 <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => color <= color1;
      <span class=K>WHEN</span> '1' => color <= color_BGR;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => color <= (<span class=K>OTHERS</span> => 'X');
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- Instance port mappings.</span>
   U_3 : c1_t3_hello_led
      <span class=K>PORT</span> <span class=K>MAP</span> (
         btn       => btn,
         sw0       => sw0,
         color_BGR => color_BGR,
         x_coord   => x_coord2,
         y_coord   => din1
      );
   U_4 : c1_t3_static_hello_led
      <span class=K>PORT</span> <span class=K>MAP</span> (
         color   => color1,
         x_coord => x_coord1,
         y_coord => y_coord1
      );

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
