-- VHDL Entity Computer_Exercise_3_lib.C3_T2_Top_Level.symbol
--
-- Created:
--          by - mfhubu.UNKNOWN (HTC219-709-SPC)
--          at - 16:12:29 21.01.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY C3_T2_Top_Level IS
   PORT( 
      btn           : IN     std_logic_vector (3 DOWNTO 0);
      clk           : IN     std_logic;
      rst_n         : IN     std_logic;
      sw0           : IN     std_logic;
      w_rdy         : IN     std_logic;
      color         : OUT    std_logic_vector (23 DOWNTO 0);
      frame_written : OUT    std_logic;
      write_out     : OUT    std_logic;
      xw            : OUT    std_logic_vector (7 DOWNTO 0);
      yw            : OUT    std_logic_vector (7 DOWNTO 0)
   );

-- Declarations

END C3_T2_Top_Level ;

--
-- VHDL Architecture Computer_Exercise_3_lib.C3_T2_Top_Level.struct
--
-- Created:
--          by - mfhubu.UNKNOWN (HTC219-709-SPC)
--          at - 16:12:29 21.01.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY Computer_Exerccise_2_lib;
LIBRARY Computer_Exercise_3_lib;
LIBRARY Computer_Exercise_4_hdl_lib;

ARCHITECTURE struct OF C3_T2_Top_Level IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL alien_col     : std_logic_vector(23 DOWNTO 0);
   SIGNAL bullet_color  : std_logic_vector(23 DOWNTO 0);
   SIGNAL din1          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din2          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din3          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din4          : std_logic_vector(7 DOWNTO 0);
   SIGNAL din5          : std_logic_vector(7 DOWNTO 0);
   SIGNAL enable        : std_logic;
   SIGNAL enable_slow   : std_logic;
   SIGNAL gun_color     : std_logic_vector(23 DOWNTO 0);
   SIGNAL gun_px_ix     : std_logic_vector(1 DOWNTO 0);
   SIGNAL hit           : std_logic;
   SIGNAL module_select : std_logic_vector(1 DOWNTO 0);
   SIGNAL speed         : std_logic;
   SIGNAL victory       : std_logic;
   SIGNAL victory_color : std_logic_vector(23 DOWNTO 0);
   SIGNAL victory_done  : std_logic;
   SIGNAL x_coord       : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_coord1      : std_logic_vector(7 DOWNTO 0);
   SIGNAL x_internal    : std_logic_vector(7 DOWNTO 0);
   SIGNAL y_coord2      : std_logic_vector(7 DOWNTO 0);


   -- Component Declarations
   COMPONENT C2_T7_Basic_Alien
   PORT (
      clk         : IN     std_logic ;
      enable      : IN     std_logic ;
      enable_slow : IN     std_logic ;
      hit         : IN     std_logic ;
      rst_n       : IN     std_logic ;
      speed       : IN     std_logic ;
      alien_col   : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord     : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord     : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT C3_T1_Gun_Module
   PORT (
      btn        : IN     std_logic_vector (3 DOWNTO 0);
      clk        : IN     std_logic ;
      enable     : IN     std_logic ;
      gun_px_idx : IN     std_logic_vector (1 DOWNTO 0);
      rst_n      : IN     std_logic ;
      gun_color  : OUT    std_logic_vector (23 DOWNTO 0);
      x_coord    : OUT    std_logic_vector (7 DOWNTO 0);
      x_internal : OUT    std_logic_vector (7 DOWNTO 0);
      y_coord    : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT C3_T2_Write_Sequencer
   PORT (
      clk           : IN     std_logic ;
      rst           : IN     std_logic ;
      victory       : IN     std_logic ;
      victory_done  : IN     std_logic ;
      write_ready   : IN     std_logic ;
      enable        : OUT    std_logic ;
      enable_slow   : OUT    std_logic ;
      frame_done    : OUT    std_logic ;
      gun_px_ix     : OUT    std_logic_vector (1 DOWNTO 0);
      module_select : OUT    std_logic_vector (1 DOWNTO 0);
      write         : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT C3_T4_Bullet
   PORT (
      btn            : IN     std_logic_vector (3 DOWNTO 0);
      clk            : IN     std_logic ;
      enable         : IN     std_logic ;
      gun_x_coord    : IN     std_logic_vector (7 DOWNTO 0);
      rst_n          : IN     std_logic ;
      bullet_color   : OUT    std_logic_vector (23 DOWNTO 0);
      bullet_x_coord : OUT    std_logic_vector (7 DOWNTO 0);
      bullet_y_coord : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT C4_T1_Hit_Detector
   PORT (
      alien_x  : IN     std_logic_vector (7 DOWNTO 0);
      alien_y  : IN     std_logic_vector (7 DOWNTO 0);
      bullet_x : IN     std_logic_vector (7 DOWNTO 0);
      bullet_y : IN     std_logic_vector (7 DOWNTO 0);
      clk      : IN     std_logic ;
      rst_n    : IN     std_logic ;
      hit      : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT C4_T2_Victory_Effect
   PORT (
      clk          : IN     std_logic ;
      rst          : IN     std_logic ;
      color        : OUT    std_logic_vector (23 DOWNTO 0);
      victory_done : OUT    std_logic ;
      x            : OUT    std_logic_vector (7 DOWNTO 0);
      y            : OUT    std_logic_vector (7 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT Hit_Counter
   PORT (
      clk          : IN     std_logic ;
      hit_detected : IN     std_logic ;
      rst          : IN     std_logic ;
      sw0          : IN     std_logic ;
      speed        : OUT    std_logic ;
      victory      : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : C2_T7_Basic_Alien USE ENTITY Computer_Exerccise_2_lib.C2_T7_Basic_Alien;
   FOR ALL : C3_T1_Gun_Module USE ENTITY Computer_Exercise_3_lib.C3_T1_Gun_Module;
   FOR ALL : C3_T2_Write_Sequencer USE ENTITY Computer_Exercise_3_lib.C3_T2_Write_Sequencer;
   FOR ALL : C3_T4_Bullet USE ENTITY Computer_Exercise_3_lib.C3_T4_Bullet;
   FOR ALL : C4_T1_Hit_Detector USE ENTITY Computer_Exercise_4_hdl_lib.C4_T1_Hit_Detector;
   FOR ALL : C4_T2_Victory_Effect USE ENTITY Computer_Exercise_4_hdl_lib.C4_T2_Victory_Effect;
   FOR ALL : Hit_Counter USE ENTITY Computer_Exercise_4_hdl_lib.Hit_Counter;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.12) for instance 'U_2' of 'mux'
   u_2combo_proc: PROCESS(x_coord, x_coord1, din2, din4, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => xw <= x_coord;
      WHEN "01" => xw <= x_coord1;
      WHEN "10" => xw <= din2;
      WHEN "11" => xw <= din4;
      WHEN OTHERS => xw <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_2combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_4' of 'mux'
   u_4combo_proc: PROCESS(y_coord2, din1, din3, din5, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => yw <= y_coord2;
      WHEN "01" => yw <= din1;
      WHEN "10" => yw <= din3;
      WHEN "11" => yw <= din5;
      WHEN OTHERS => yw <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_4combo_proc;

   -- ModuleWare code(v1.12) for instance 'U_5' of 'mux'
   u_5combo_proc: PROCESS(alien_col, gun_color, bullet_color, 
                          victory_color, module_select)
   BEGIN
      CASE module_select IS
      WHEN "00" => color <= alien_col;
      WHEN "01" => color <= gun_color;
      WHEN "10" => color <= bullet_color;
      WHEN "11" => color <= victory_color;
      WHEN OTHERS => color <= (OTHERS => 'X');
      END CASE;
   END PROCESS u_5combo_proc;

   -- Instance port mappings.
   U_6 : C2_T7_Basic_Alien
      PORT MAP (
         clk         => clk,
         enable      => enable,
         enable_slow => enable_slow,
         hit         => btn(2),
         rst_n       => rst_n,
         speed       => speed,
         alien_col   => alien_col,
         x_coord     => x_coord,
         y_coord     => y_coord2
      );
   U_3 : C3_T1_Gun_Module
      PORT MAP (
         btn        => btn,
         clk        => clk,
         enable     => enable,
         gun_px_idx => gun_px_ix,
         rst_n      => rst_n,
         gun_color  => gun_color,
         x_coord    => x_coord1,
         x_internal => x_internal,
         y_coord    => din1
      );
   U_1 : C3_T2_Write_Sequencer
      PORT MAP (
         clk           => clk,
         rst           => rst_n,
         victory       => victory,
         victory_done  => victory_done,
         write_ready   => w_rdy,
         enable        => enable,
         enable_slow   => enable_slow,
         frame_done    => frame_written,
         gun_px_ix     => gun_px_ix,
         module_select => module_select,
         write         => write_out
      );
   U_7 : C3_T4_Bullet
      PORT MAP (
         btn            => btn,
         clk            => clk,
         enable         => enable,
         gun_x_coord    => x_internal,
         rst_n          => rst_n,
         bullet_color   => bullet_color,
         bullet_x_coord => din2,
         bullet_y_coord => din3
      );
   U_8 : C4_T1_Hit_Detector
      PORT MAP (
         alien_x  => x_coord,
         alien_y  => y_coord2,
         bullet_x => din2,
         bullet_y => din3,
         clk      => clk,
         rst_n    => rst_n,
         hit      => hit
      );
   U_10 : C4_T2_Victory_Effect
      PORT MAP (
         clk          => clk,
         rst          => rst_n,
         color        => victory_color,
         victory_done => victory_done,
         x            => din4,
         y            => din5
      );
   U_9 : Hit_Counter
      PORT MAP (
         clk          => clk,
         hit_detected => hit,
         rst          => rst_n,
         sw0          => sw0,
         speed        => speed,
         victory      => victory
      );

END struct;
